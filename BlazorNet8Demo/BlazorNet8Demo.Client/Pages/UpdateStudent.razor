@using SharedModels.StudentModels
@using ViewModels.StudentVM

<EditForm Model="Student">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row">
        <div class="col-5 col-md-3 text-end">Email:</div>
        <div class="col-7 col-md-9  pb-1">
            <InputText id="email" @bind-Value="@Student.Email" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-5 col-md-3 text-end">Ph Number:</div>
        <div class="col-7 col-md-9  pb-1">
            <InputText id="phNum" @bind-Value="@Student.PhoneNumber" class="form-control" />

        </div>
    </div>
    <div class="row">
        <div class="col-5 col-md-3 text-end">Last Name:</div>
        <div class="col-7 col-md-9  pb-1">
            <InputDate id="date" @bind-Value="@Student.BirthDate" class="form-control" placeholder="Date" />
        </div>
    </div>
    <hr />
    <div class="row mt-3">
        <div class="col-5 col-md-3 text-start">
            <button type="button" class="btn btn-sm btn-primary" @onclick="UpdateStudentInfo">Update</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public StudentModel Student { get; set; }

    [Parameter] public IStudentVM StudentVM { get; set; }

    [Parameter] public EventCallback StudentUpdated { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task UpdateStudentInfo()
    {
        await StudentVM.UpdateStudentAsync(Student);
        await StudentUpdated.InvokeAsync(true);
    }
}
